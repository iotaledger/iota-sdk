"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Default = void 0;
const react_1 = __importDefault(require("react"));
const clipanion_1 = require("clipanion");
const ink_1 = require("ink");
const ink_select_input_1 = __importDefault(require("ink-select-input"));
const DefaultComponent = (props) => {
    const items = [
        {
            label: 'Preview the current directory.',
            value: 'start',
        },
        {
            label: 'Build the current directory.',
            value: 'build',
        },
        {
            label: 'Configure the tutorial settings to properly list it on the IOTA Wiki.',
            value: 'configure',
        },
    ];
    const onSelect = (item) => {
        if (item.value === 'start') {
            props.command.cli.run(['start']);
        }
        if (item.value === 'build') {
            props.command.cli.run(['build']);
        }
        if (item.value === 'configure') {
            props.command.cli.run(['tutorial', 'configure']);
        }
    };
    return (react_1.default.createElement(ink_1.Box, { flexDirection: 'column' },
        react_1.default.createElement(ink_1.Text, null, "What do you want to do?"),
        react_1.default.createElement(ink_1.Box, { marginTop: 1 },
            react_1.default.createElement(ink_select_input_1.default, { items: items, onSelect: onSelect }))));
};
class Default extends clipanion_1.Command {
    static paths = [clipanion_1.Command.Default];
    static usage = clipanion_1.Command.Usage({
        description: `Choose what you want to do.`,
    });
    async execute() {
        (0, ink_1.render)(react_1.default.createElement(DefaultComponent, { command: this }));
    }
}
exports.Default = Default;
