name: Wasm bindings checks (client)

on: workflow_call

jobs:
  test:
    name: Test
    if: ${{ ! github.event.schedule }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        node: ["18"]

    steps:
      - name: Checkout the Source Code
        uses: actions/checkout@v3

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      # Download a pre-compiled wasm-bindgen binary.
      - name: Install wasm-bindgen-cli
        uses: jetli/wasm-bindgen-action@24ba6f9fff570246106ac3f80f35185600c3f6c9
        with:
          version: "0.2.84"

      - name: Set Up Node.js ${{ matrix.node }} and Yarn Cache
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
          cache: yarn
          cache-dependency-path: sdk/src/client/bindings/wasm/yarn.lock

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
        with:
          cache-directories: "sdk/src/client/bindings/wasm"

      - name: Run Yarn Install
        working-directory: sdk/src/client/bindings/wasm/
        run: yarn install

      - name: Run Yarn Build
        working-directory: sdk/src/client/bindings/wasm/
        run: yarn build

      - name: Run Yarn Test
        working-directory: sdk/src/client/bindings/wasm/
        run: yarn test

  lint:
    name: Lint
    if: ${{ ! github.event.schedule }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the Source Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          cache: yarn
          cache-dependency-path: sdk/src/client/bindings/wasm/yarn.lock
          node-version: 18.x

      - name: Install Dependencies
        working-directory: sdk/src/client/bindings/wasm/
        run: yarn install --ignore-scripts

      - name: Lint
        working-directory: sdk/src/client/bindings/wasm/
        run: yarn lint

  check-format:
    name: Check Format
    if: ${{ ! github.event.schedule }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the Source Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          cache: yarn
          cache-dependency-path: sdk/src/client/bindings/wasm/yarn.lock
          node-version: 18.x

      - name: Install Dependencies
        working-directory: sdk/src/client/bindings/wasm/
        run: yarn install --ignore-scripts

      - name: Format
        working-directory: sdk/src/client/bindings/wasm/
        run: yarn format-check
