name: Nodejs bindings checks
on:
  push:
    branches: [develop, production]
    paths:
      - ".github/workflows/bindings-nodejs.yml"
      - ".github/actions/**"
      - "**.rs" # Include all rust files
      - "**Cargo.toml" # Include all Cargo.toml files
      - "**Cargo.lock" # Include all Cargo.lock files
      - "!**/examples/**" # Exclude all examples
      - "!**/tests/**" # Exclude all tests
      - "!**/bindings/**" # Exclude all bindings
      - "!cli/**" # Exclude CLI
      - "sdk/src/client/bindings/nodejs/**" # Re-include nodejs bindings
  pull_request:
    branches: [develop, production]
    paths:
      - ".github/workflows/bindings-nodejs.yml"
      - ".github/actions/**"
      - "**.rs" # Include all rust files
      - "**Cargo.toml" # Include all Cargo.toml files
      - "**Cargo.lock" # Include all Cargo.lock files
      - "!**/examples/**" # Exclude all examples
      - "!**/tests/**" # Exclude all tests
      - "!**/bindings/**" # Exclude all bindings
      - "!cli/**" # Exclude CLI
      - "sdk/src/client/bindings/nodejs/**" # Re-include nodejs bindings
  schedule:
    - cron: "0 1 * * *"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  test:
    name: Test
    if: ${{ ! github.event.schedule }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        node: ["14", "16", "18"]

    steps:
      - name: Checkout the Source Code
        uses: actions/checkout@v3

      - name: Set Up Nightly Rust
        uses: ./.github/actions/setup-rust
        with:
          toolchain: nightly
          cache: true
          cache-root: sdk/src/client/bindings/nodejs/
          cache-job-id: ${{ github.workflow }}-${{ github.job }}-${{ matrix.os }}-${{ matrix.node }}
          cache-hash: ${{ hashFiles('.github/workflows/bindings-nodejs.yml') }}

      - name: Set Up Node.js ${{ matrix.node }} and Yarn Cache
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
          cache: yarn
          cache-dependency-path: sdk/src/client/bindings/nodejs/yarn.lock

      # This step is required for bindgen to work on Windows.
      - name: Set Up Clang/LLVM (Windows)
        if: ${{ startsWith(matrix.os, 'windows') }}
        uses: ./.github/actions/setup-clang

      - name: Install Required Dependencies (Ubuntu)
        if: ${{ startsWith(matrix.os, 'ubuntu') }}
        run: |
          sudo apt-get update
          sudo apt-get install libudev-dev libusb-1.0-0-dev

      - name: Run Yarn Install
        working-directory: sdk/src/client/bindings/nodejs/
        run: yarn install

      - name: Run Yarn Rebuild
        working-directory: sdk/src/client/bindings/nodejs/
        run: yarn rebuild

      - name: Run Yarn Test
        working-directory: sdk/src/client/bindings/nodejs/
        run: yarn test

  lint:
    name: Lint
    if: ${{ ! github.event.schedule }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the Source Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          cache: yarn
          cache-dependency-path: sdk/src/client/bindings/nodejs/yarn.lock
          node-version: 14.x

      - name: Install Dependencies
        working-directory: sdk/src/client/bindings/nodejs/
        run: yarn

      - name: Lint
        working-directory: sdk/src/client/bindings/nodejs/
        run: yarn lint

  check-format:
    name: Check Format
    if: ${{ ! github.event.schedule }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the Source Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          cache: yarn
          cache-dependency-path: sdk/src/client/bindings/nodejs/yarn.lock
          node-version: 14.x

      - name: Install Dependencies
        working-directory: sdk/src/client/bindings/nodejs/
        run: yarn

      - name: Format
        working-directory: sdk/src/client/bindings/nodejs/
        run: yarn format-check
