name: Nodejs bindings checks (wallet)

on:
  push:
    branches: [develop, production]
    paths:
      - ".github/actions/**"
      - "**.rs" # Include all rust files
      - "**Cargo.toml" # Include all Cargo.toml files
      - "**Cargo.lock" # Include all Cargo.lock files
      - "!**/examples/**" # Exclude all examples
      - "!**/tests/**" # Exclude all tests
      - "!cli/**" # Exclude CLI
      - "!**/bindings/**" # Exclude all bindings
      - "bindings/nodejs-old/**"
      - ".github/workflows/bindings-wallet-nodejs.yml"
      - ".patches/*"
  pull_request:
    branches: [develop, production]
    paths:
      - ".github/actions/**"
      - "**.rs" # Include all rust files
      - "**Cargo.toml" # Include all Cargo.toml files
      - "**Cargo.lock" # Include all Cargo.lock files
      - "!**/examples/**" # Exclude all examples
      - "!**/tests/**" # Exclude all tests
      - "!cli/**" # Exclude CLI
      - "!**/bindings/**" # Exclude all bindings
      - "bindings/nodejs-old/**"
      - ".github/workflows/bindings-wallet-nodejs.yml"
      - ".patches/*"
  schedule:
    - cron: "0 1 * * *"
  workflow_dispatch:

env:
  CARGO_INCREMENTAL: 0

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-13, ubuntu-latest]
        node: ["18"]

    steps:
      - name: Checkout the Source Code
        uses: actions/checkout@v3

      - name: Select Xcode (macOS)
        uses: maxim-lobanov/setup-xcode@v1
        if: matrix.os == 'macos-13'
        with:
          xcode-version: '14.3'

      - name: Set deployment target (macOS)
        run: echo "MACOSX_DEPLOYMENT_TARGET=10.13" >> $GITHUB_ENV
        if: matrix.os == 'macos-13'

      - name: Set up Rust
        uses: ./.github/actions/setup-rust
        with:
          cache-root: bindings/nodejs-old

      - name: Set Up Node.js ${{ matrix.node }} and Yarn Cache
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
          cache: npm
          cache-dependency-path: bindings/nodejs-old/package-lock.json

      # This step is required for bindgen to work on Windows.
      - name: Set Up Clang/LLVM (Windows)
        if: ${{ startsWith(matrix.os, 'windows') }}
        uses: ./.github/actions/setup-clang

      - name: Install Required Dependencies (Ubuntu)
        if: ${{ startsWith(matrix.os, 'ubuntu') }}
        run: |
          sudo apt-get update
          sudo apt-get install libudev-dev libusb-1.0-0-dev

      # This step is required to support macOS 10.13
      - name: Patch librocksdb-sys (macOS)
        if: ${{ startsWith(matrix.os, 'macos') }}
        run: |
          cargo install cargo-patch
          cp ${{ github.workspace }}/.patches/rocksdb_faligned_allocation.patch .
          git apply --ignore-space-change --ignore-whitespace ${{ github.workspace }}/.patches/macos_cargo_toml.patch
          cat Cargo.toml
          cargo patch

      - name: Build nodejs binding
        run: npm ci --build-from-source
        working-directory: bindings/nodejs-old

      - name: Run npm test
        run: npm test
        working-directory: bindings/nodejs-old
